<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<LangVersion>latest</LangVersion>
		<Nullable>enable</Nullable>

		<!--Pdb内にソースコードのフルパスを含めない-->
		<RepoRoot>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)..\'))</RepoRoot>
		<PathMap>$(RepoRoot)=.</PathMap>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="CsvHelper" Version="33.0.1" PrivateAssets="all" GeneratePathProperty="true" />
		<PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="9.0.0" PrivateAssets="all" GeneratePathProperty="true" />
		<PackageReference Include="Microsoft.Bcl.HashCode" Version="6.0.0" PrivateAssets="all" GeneratePathProperty="true" />

		<PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.11.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.12.0" PrivateAssets="all" />
	</ItemGroup>

	<!-- 
  ライブラリの依存関係をGeneratorの利用側から読み込めない問題の対策
  https://github.com/dotnet/roslyn/discussions/47517
  
  <PackageReference/>でPrivateAssets="all" GeneratePathProperty="true"を指定
  <Target/>でGetDependencyTargetPathsを定義し、GeneratePathPropertyで生成されたパスを指定
  <PropertyGroup/>でGetTargetPathDependsOnにGetDependencyTargetPathsを追加
  
  Includeするパスは"$(PKG{PackageName})\lib\netstandard2.0\*.dll"のように指定
  {PackageName}はPackageReferenceで指定したパッケージ名の.を_に置き換えたもの
  -->

	<Target Name="GetDependencyTargetPaths">
		<ItemGroup>
			<TargetPathWithTargetPlatformMoniker Include="$(PKGCsvHelper)\lib\netstandard2.0\*.dll" IncludeRuntimeDependency="false" />
			<TargetPathWithTargetPlatformMoniker Include="$(PKGMicrosoft_Bcl_AsyncInterfaces)\lib\netstandard2.0\*.dll" IncludeRuntimeDependency="false" />
			<TargetPathWithTargetPlatformMoniker Include="$(PKGMicrosoft_Bcl_HashCode)\lib\netstandard2.0\*.dll" IncludeRuntimeDependency="false" />
		</ItemGroup>
	</Target>

	<PropertyGroup>
		<GetTargetPathDependsOn>$(GetTargetPathDependsOn);GetDependencyTargetPaths</GetTargetPathDependsOn>
	</PropertyGroup>

</Project>
